@using System.Globalization
@model WebProgrammingTerm.MVC.Models.CartModel

<head>
    <link rel="stylesheet" type="text/css" href="../../Content/BookerrCSS/profile.css">
    <link rel="stylesheet" type="text/css" href="../../Content/BookerrCSS/address.css?v38">
    <link rel="stylesheet" type="text/css" href="../../Content/BookerrCSS/order.css?v3">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css"
          integrity="sha512-z3gLpd7yknf1YoNbCzqRKc4qyor8gaKU1qmn+CShxbuBusANI9QpRohGBreCFkKxLhei6S9CQXFEbbKuqLg0DA=="
          crossorigin="anonymous" referrerpolicy="no-referrer" />
    <script src="../../Scripts/BookerrScripts/CartPage.js" ></script>
    <script src="../../Scripts/BookerrScripts/AddressCarosel.js"></script>

</head>

<h2>title</h2>
<body>
    
<div class="mainContent" style="height: fit-content">
    
    @if (Model.Products.Count > 0)
    {
        
        <div class="profile_section" style="height: 100%">
    
        <div class="link_holder" style="height: auto;">
            <h2 id="profile_header" style="margin-top: -195%; margin-left:-135%;  width: auto;">Order</h2>

        </div>

        <div class="productcontainer">
            @{
                var totalPrice = 0f;
                foreach (var product in Model.Products)
                {
                    var name = product.Publisher.Replace("-", " ");
                    var titleCaseName = CultureInfo.CurrentCulture.TextInfo.ToTitleCase(name);
                    <div id="product-@product.ProductId" style="height: fit-content">
                        <div id="productContent">
                            <div class="tcan">
                                <a href="#" onclick="removeProduct('@product.ProductId')"><i id="trash-can-@product.ProductId" class="fa-regular fa-trash-can"
                                                                                             style="color:#F47878"></i>
                                </a>
                            </div>
                            <p id ="priceText">@product.Price₺</p>

                            <div id="productImage">
                                <a href="@Url.Action("Index", "Product", new { id = @product.ProductId })">
                                    <img src="@product.ImagePath"/>

                                </a>
                            </div>

                            <div id="productInfo">
                                <p style="font-weight: 700">@titleCaseName</p>
                                <p>@product.Name</p>
                                <p>@product.Author</p>
                            </div>

                        </div>

                    </div>
                    totalPrice += product.Price;
                }
            }
        </div>
        <hr style=" border-color: black; margin-top: 1.5%; border-width: 1px; ">

            <p style="margin-top:1%; margin-left: 65%;">Product Total &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
                &nbsp;@totalPrice₺</p>
            <p style="margin-left: 65%;">
                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Tax
                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;57.00₺</p>

            <hr style=" border-color: black; margin-top: 1.5%; border-width: 1px; width: 40%; margin-left: 60%; ">

            <p style=" margin-left: 57%; font-size:20px; font-weight:700;">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;Total
                Price: &nbsp; &nbsp; &nbsp; &nbsp;@totalPrice₺</p>
        

            <div class="address">
                <div class="my_address">

                    @foreach (var location in Model.Locations)
                    {
                        <div class="addressInfo" id="@location.Id" >
                            <a style="text-decoration: none; color: black; cursor:pointer;" onclick="highLightAddress('@location.Id');SetClickedLocation('@location.Id')">
                                <h3 style=" font-size: 16px; font-weight: 700">@location.Title</h3>
                                <content>
                                    <p style=" font-size: 14px; font-weight: 500;">@location.Address @location.City
                                        @location.ZipCode
                                    </p>
                                </content>
                            </a>
                        </div>
                    }
                    <div class="addition" >
                        <a href="@Url.Action("Addresses","Address")" target = "_blank"class="addition-link">+</a>
                    </div>
                </div>

            </div>

        @if (Model.Products.Count > 0)
        {
                
            <div class="payment-section">
            <h2 style="font-size: 32px; margin-top: 3%;">Payment</h2>
            <form action="@Url.Action("Index", "Cart")" method="POST" onsubmit="return validateForm()">
                
                <div class="payment-fields">
                    <div class="cardinfo">
                        @Html.HiddenFor(m => m.ClickedLocation, new { @required = "required" })

                        @Html.TextBoxFor(m=>m.FirstNameCC,new {type="text", id="name" ,placeholder="First Name" ,name="name", required="required",
                            style="width: 48%; padding: 13px; margin-bottom: 1.5%;"})
                        
                         @Html.TextBoxFor(m=>m.LastNameCC,new {type="text", id="surname", placeholder="Last Name", name="surname", required="required",
                             style="width: 48%;  margin-top: -7.5%; padding: 13px;"})
                        
                        
                        @Html.TextBoxFor(m=>m.CCNumber, new {type="number", id="cardNumber", placeholder="Credit Card Number", name="required",
                            required="reqiured", style="width: 48%; padding: 13px;"})
                        
                        
                        @Html.TextBoxFor(m=>m.CVC, new {type="number", id="cvv", placeholder="CVC", name="cvv", required = "required",
                            style="width: 48%;  margin-top: -6%; padding: 13px;"})
           
                    </div>
                </div>
                
                <div class="card_date">
                    <p style="color:#808285; width:24%; font-weight:700; font-size:20px; margin-top:3%;">Card Expiration:
                    </p>
                    <div style=" margin-top: -5%;">
                        <select id="cardMonth" name="cardMonth" style="width: 8%; margin-left: 27%;">
                            @for (var i = 1; i <= 12; i++)
                            {
                                <option >@i</option>
                            }
                        </select>
                        <select id="cardYear" name="cardYear" style="width: 10%; margin-left: 0.5%;">
                            @for (var i = 2045; i >= DateTime.Now.Year; i--)
                            {
                                <option value="@i">@i</option>
                            }
                        </select>
                    </div>
                </div>
                <input type="radio" id="agreement" name="agreement" required="required"
                    style="width: 7%; height: 7%; margin-top: 5%; margin-left: -1%; accent-color: grey;">
                <p style="margin-top: -4%; margin-left: 6%;">
                    I have read and approve the <a href="#" style="color: blue;">Distance Sales Agreement.</a>
                </p>
                <button type="submit" class="save-button">Confirm Order</button>

            </form>

        </div>
    
        }

        </div>

        
    }



    </div>
<script>
    function removeProduct(productId) {
        $.ajax({
            url: '@Url.Action("Remove", "Cart")',
            type: 'POST',
            data: { id: productId },
            success: function (data) {
                $('#product-' + productId).remove();
            
                var cartItems = JSON.parse(localStorage.getItem('cart')) || [];
            
                var index = cartItems.indexOf(productId);
            
                if (index !== -1) {
                    cartItems.splice(index, 1);
                }
            
                localStorage.setItem('cart', JSON.stringify(cartItems));
                
                if (data.redir)
                    window.location.href = data.redir
            },
            error: function () {
                alert('Error removing product.');
            }
        });
    }
    
    function highLightAddress(id)
    {
        
        var allElements = document.getElementsByClassName("addressInfo");
        for (var i = 0; i < allElements.length; i++) {
            if (allElements[i].id === id)
            {
                allElements[i].style.borderColor = "#4cae4c";
            }else
            {                    
                allElements[i].style.borderColor = "#E6E7E8";
            }
        }
    }
    function  SetClickedLocation(value)
    {
        document.getElementById("ClickedLocation").value = value;
    
    }
    
    function validateForm() {
        var form = document.querySelector('form');
            var clickedLocation = document.getElementById("ClickedLocation").value;

        if (clickedLocation === "") {
            alert("Please select a home address before submitting the form.");
            return false; 

        }
        
        if (form.checkValidity())
        {
            localStorage.removeItem('cart')
            return true; 
        } else 
        {
            return false; 
        }
    }
</script>
</body>

